// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot 1`] = `
BrowserRouter {
  "_reactInternalFiber": FiberNode {
    "_debugID": 33,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": null,
    "_debugSource": Object {
      "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.test.js",
      "lineNumber": 45,
    },
    "alternate": null,
    "child": FiberNode {
      "_debugID": 34,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugID": 35,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": Object {
          "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.test.js",
          "lineNumber": 46,
        },
        "alternate": null,
        "child": FiberNode {
          "_debugID": 36,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
            "lineNumber": 36,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 37,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
              "lineNumber": 30,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 45,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                "lineNumber": 31,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 46,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Alerts",
                  "href": "/alerts",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <a
                  href="/alerts"
>
                  Alerts
</a>,
                "tag": 5,
                "type": "a",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "Alerts",
                "replace": false,
                "to": "/alerts",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Link {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "handleClick": [Function],
                "props": Object {
                  "children": "Alerts",
                  "replace": false,
                  "to": "/alerts",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "internalContextTag": 0,
            "key": "0",
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <Link
                replace={false}
                to="/alerts"
>
                Alerts
</Link>,
            },
            "memoizedState": null,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugID": 38,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                "lineNumber": 30,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                  "lineNumber": 31,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 48,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Bars",
                    "href": "/bars",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <a
                    href="/bars"
>
                    Bars
</a>,
                  "tag": 5,
                  "type": "a",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "Bars",
                  "replace": false,
                  "to": "/bars",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Link {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "handleClick": [Function],
                  "props": Object {
                    "children": "Bars",
                    "replace": false,
                    "to": "/bars",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": "1",
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <Link
                  replace={false}
                  to="/bars"
>
                  Bars
</Link>,
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugID": 39,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                  "lineNumber": 30,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 49,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                    "lineNumber": 31,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 50,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Buttons",
                      "href": "/buttons",
                      "onClick": [Function],
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <a
                      href="/buttons"
>
                      Buttons
</a>,
                    "tag": 5,
                    "type": "a",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Buttons",
                    "replace": false,
                    "to": "/buttons",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Link {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {
                      "router": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                      },
                    },
                    "handleClick": [Function],
                    "props": Object {
                      "children": "Buttons",
                      "replace": false,
                      "to": "/buttons",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "internalContextTag": 0,
                "key": "2",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <Link
                    replace={false}
                    to="/buttons"
>
                    Buttons
</Link>,
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugID": 40,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                    "lineNumber": 30,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 51,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                      "lineNumber": 31,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 52,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "Cards",
                        "href": "/cards",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <a
                        href="/cards"
>
                        Cards
</a>,
                      "tag": 5,
                      "type": "a",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Cards",
                      "replace": false,
                      "to": "/cards",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": Link {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                        },
                      },
                      "handleClick": [Function],
                      "props": Object {
                        "children": "Cards",
                        "replace": false,
                        "to": "/cards",
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "internalContextTag": 0,
                  "key": "3",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <Link
                      replace={false}
                      to="/cards"
>
                      Cards
</Link>,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": [Circular],
                  "sibling": FiberNode {
                    "_debugID": 41,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                      "lineNumber": 30,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 53,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                        "lineNumber": 31,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 54,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "List Views",
                          "href": "/list-views",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <a
                          href="/list-views"
>
                          List Views
</a>,
                        "tag": 5,
                        "type": "a",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "List Views",
                        "replace": false,
                        "to": "/list-views",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": Link {
                        "__reactInternalMemoizedMaskedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                          },
                        },
                        "__reactInternalMemoizedUnmaskedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                          },
                        },
                        "handleClick": [Function],
                        "props": Object {
                          "children": "List Views",
                          "replace": false,
                          "to": "/list-views",
                        },
                        "refs": Object {},
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 4,
                    "internalContextTag": 0,
                    "key": "4",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <Link
                        replace={false}
                        to="/list-views"
>
                        List Views
</Link>,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": [Circular],
                    "sibling": FiberNode {
                      "_debugID": 42,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                        "lineNumber": 30,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 55,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                          "lineNumber": 31,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 56,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Tab Bars",
                            "href": "/tab-bars",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <a
                            href="/tab-bars"
>
                            Tab Bars
</a>,
                          "tag": 5,
                          "type": "a",
                          "updateQueue": null,
                        },
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "Tab Bars",
                          "replace": false,
                          "to": "/tab-bars",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": Link {
                          "__reactInternalMemoizedMaskedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "action": "POP",
                                "block": [Function],
                                "createHref": [Function],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                            },
                          },
                          "__reactInternalMemoizedUnmaskedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "action": "POP",
                                "block": [Function],
                                "createHref": [Function],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "action": "POP",
                                "block": [Function],
                                "createHref": [Function],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "pathname": "/",
                                  "search": "",
                                  "state": undefined,
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                            },
                          },
                          "handleClick": [Function],
                          "props": Object {
                            "children": "Tab Bars",
                            "replace": false,
                            "to": "/tab-bars",
                          },
                          "refs": Object {},
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 5,
                      "internalContextTag": 0,
                      "key": "5",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Link
                          replace={false}
                          to="/tab-bars"
>
                          Tab Bars
</Link>,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": [Circular],
                      "sibling": FiberNode {
                        "_debugID": 43,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                          "lineNumber": 30,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 57,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                            "lineNumber": 31,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 58,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Loader",
                              "href": "/loader",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <a
                              href="/loader"
>
                              Loader
</a>,
                            "tag": 5,
                            "type": "a",
                            "updateQueue": null,
                          },
                          "effectTag": 1,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Loader",
                            "replace": false,
                            "to": "/loader",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": Link {
                            "__reactInternalMemoizedMaskedChildContext": Object {
                              "router": Object {
                                "history": Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "createHref": [Function],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                              },
                            },
                            "__reactInternalMemoizedUnmaskedChildContext": Object {
                              "router": Object {
                                "history": Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "createHref": [Function],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "createHref": [Function],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "pathname": "/",
                                    "search": "",
                                    "state": undefined,
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                              },
                            },
                            "handleClick": [Function],
                            "props": Object {
                              "children": "Loader",
                              "replace": false,
                              "to": "/loader",
                            },
                            "refs": Object {},
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 6,
                        "internalContextTag": 0,
                        "key": "6",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Link
                            replace={false}
                            to="/loader"
>
                            Loader
</Link>,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": [Circular],
                        "sibling": FiberNode {
                          "_debugID": 44,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                            "lineNumber": 30,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 59,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/home/matthew/Projects/spectrum/src/Components/Sidebar.js",
                              "lineNumber": 31,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 60,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "Demo",
                                "href": "/demo",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <a
                                href="/demo"
>
                                Demo
</a>,
                              "tag": 5,
                              "type": "a",
                              "updateQueue": null,
                            },
                            "effectTag": 1,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Demo",
                              "replace": false,
                              "to": "/demo",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": Link {
                              "__reactInternalMemoizedMaskedChildContext": Object {
                                "router": Object {
                                  "history": Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                },
                              },
                              "__reactInternalMemoizedUnmaskedChildContext": Object {
                                "router": Object {
                                  "history": Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                },
                              },
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {
                                "router": Object {
                                  "history": Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "createHref": [Function],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "pathname": "/",
                                      "search": "",
                                      "state": undefined,
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                },
                              },
                              "handleClick": [Function],
                              "props": Object {
                                "children": "Demo",
                                "replace": false,
                                "to": "/demo",
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 2,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 7,
                          "internalContextTag": 0,
                          "key": "7",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <Link
                              replace={false}
                              to="/demo"
>
                              Demo
</Link>,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <li>
                            <a
                                                        href="/demo"
                            >
                                                        Demo
                            </a>
</li>,
                          "tag": 5,
                          "type": "li",
                          "updateQueue": null,
                        },
                        "stateNode": <li>
                          <a
                                                    href="/loader"
                          >
                                                    Loader
                          </a>
</li>,
                        "tag": 5,
                        "type": "li",
                        "updateQueue": null,
                      },
                      "stateNode": <li>
                        <a
                                                href="/tab-bars"
                        >
                                                Tab Bars
                        </a>
</li>,
                      "tag": 5,
                      "type": "li",
                      "updateQueue": null,
                    },
                    "stateNode": <li>
                      <a
                                            href="/list-views"
                      >
                                            List Views
                      </a>
</li>,
                    "tag": 5,
                    "type": "li",
                    "updateQueue": null,
                  },
                  "stateNode": <li>
                    <a
                                        href="/cards"
                    >
                                        Cards
                    </a>
</li>,
                  "tag": 5,
                  "type": "li",
                  "updateQueue": null,
                },
                "stateNode": <li>
                  <a
                                    href="/buttons"
                  >
                                    Buttons
                  </a>
</li>,
                "tag": 5,
                "type": "li",
                "updateQueue": null,
              },
              "stateNode": <li>
                <a
                                href="/bars"
                >
                                Bars
                </a>
</li>,
              "tag": 5,
              "type": "li",
              "updateQueue": null,
            },
            "stateNode": <li>
              <a
                            href="/alerts"
              >
                            Alerts
              </a>
</li>,
            "tag": 5,
            "type": "li",
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "internalContextTag": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <li>
                <Link
                                replace={false}
                                to="/alerts"
                >
                                Alerts
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/bars"
                >
                                Bars
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/buttons"
                >
                                Buttons
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/cards"
                >
                                Cards
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/list-views"
                >
                                List Views
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/tab-bars"
                >
                                Tab Bars
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/loader"
                >
                                Loader
                </Link>
</li>,
              <li>
                <Link
                                replace={false}
                                to="/demo"
                >
                                Demo
                </Link>
</li>,
            ],
            "className": "sidebar",
          },
          "memoizedState": null,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <ul
            class="sidebar"
>
            <li>
                        <a
                                    href="/alerts"
                        >
                                    Alerts
                        </a>
            </li>
            <li>
                        <a
                                    href="/bars"
                        >
                                    Bars
                        </a>
            </li>
            <li>
                        <a
                                    href="/buttons"
                        >
                                    Buttons
                        </a>
            </li>
            <li>
                        <a
                                    href="/cards"
                        >
                                    Cards
                        </a>
            </li>
            <li>
                        <a
                                    href="/list-views"
                        >
                                    List Views
                        </a>
            </li>
            <li>
                        <a
                                    href="/tab-bars"
                        >
                                    Tab Bars
                        </a>
            </li>
            <li>
                        <a
                                    href="/loader"
                        >
                                    Loader
                        </a>
            </li>
            <li>
                        <a
                                    href="/demo"
                        >
                                    Demo
                        </a>
            </li>
</ul>,
          "tag": 5,
          "type": "ul",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "links": Array [
            Object {
              "route": "/alerts",
              "text": "Alerts",
            },
            Object {
              "route": "/bars",
              "text": "Bars",
            },
            Object {
              "route": "/buttons",
              "text": "Buttons",
            },
            Object {
              "route": "/cards",
              "text": "Cards",
            },
            Object {
              "route": "/list-views",
              "text": "List Views",
            },
            Object {
              "route": "/tab-bars",
              "text": "Tab Bars",
            },
            Object {
              "route": "/loader",
              "text": "Loader",
            },
            Object {
              "route": "/demo",
              "text": "Demo",
            },
          ],
        },
        "memoizedState": Object {
          "active": false,
        },
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": Sidebar {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "links": Array [
              Object {
                "route": "/alerts",
                "text": "Alerts",
              },
              Object {
                "route": "/bars",
                "text": "Bars",
              },
              Object {
                "route": "/buttons",
                "text": "Buttons",
              },
              Object {
                "route": "/cards",
                "text": "Cards",
              },
              Object {
                "route": "/list-views",
                "text": "List Views",
              },
              Object {
                "route": "/tab-bars",
                "text": "Tab Bars",
              },
              Object {
                "route": "/loader",
                "text": "Loader",
              },
              Object {
                "route": "/demo",
                "text": "Demo",
              },
            ],
          },
          "refs": Object {},
          "state": Object {
            "active": false,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "effectTag": 1,
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "internalContextTag": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "children": <Sidebar
          links={
                    Array [
                              Object {
                                "route": "/alerts",
                                "text": "Alerts",
                              },
                              Object {
                                "route": "/bars",
                                "text": "Bars",
                              },
                              Object {
                                "route": "/buttons",
                                "text": "Buttons",
                              },
                              Object {
                                "route": "/cards",
                                "text": "Cards",
                              },
                              Object {
                                "route": "/list-views",
                                "text": "List Views",
                              },
                              Object {
                                "route": "/tab-bars",
                                "text": "Tab Bars",
                              },
                              Object {
                                "route": "/loader",
                                "text": "Loader",
                              },
                              Object {
                                "route": "/demo",
                                "text": "Demo",
                              },
                            ]
          }
/>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "memoizedState": Object {
        "match": Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        },
      },
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": [Circular],
      "sibling": null,
      "stateNode": Router {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "router": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "router": Object {
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
            "route": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
          },
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {
          "router": undefined,
        },
        "props": Object {
          "children": <Sidebar
            links={
                        Array [
                                    Object {
                                      "route": "/alerts",
                                      "text": "Alerts",
                                    },
                                    Object {
                                      "route": "/bars",
                                      "text": "Bars",
                                    },
                                    Object {
                                      "route": "/buttons",
                                      "text": "Buttons",
                                    },
                                    Object {
                                      "route": "/cards",
                                      "text": "Cards",
                                    },
                                    Object {
                                      "route": "/list-views",
                                      "text": "List Views",
                                    },
                                    Object {
                                      "route": "/tab-bars",
                                      "text": "Tab Bars",
                                    },
                                    Object {
                                      "route": "/loader",
                                      "text": "Loader",
                                    },
                                    Object {
                                      "route": "/demo",
                                      "text": "Demo",
                                    },
                                  ]
            }
/>,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "match": Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 2,
      "type": [Function],
      "updateQueue": null,
    },
    "effectTag": 1,
    "expirationTime": 0,
    "firstEffect": null,
    "index": 0,
    "internalContextTag": 0,
    "key": null,
    "lastEffect": null,
    "memoizedProps": Object {
      "children": <Sidebar
        links={
                Array [
                        Object {
                          "route": "/alerts",
                          "text": "Alerts",
                        },
                        Object {
                          "route": "/bars",
                          "text": "Bars",
                        },
                        Object {
                          "route": "/buttons",
                          "text": "Buttons",
                        },
                        Object {
                          "route": "/cards",
                          "text": "Cards",
                        },
                        Object {
                          "route": "/list-views",
                          "text": "List Views",
                        },
                        Object {
                          "route": "/tab-bars",
                          "text": "Tab Bars",
                        },
                        Object {
                          "route": "/loader",
                          "text": "Loader",
                        },
                        Object {
                          "route": "/demo",
                          "text": "Demo",
                        },
                      ]
        }
/>,
    },
    "memoizedState": null,
    "nextEffect": null,
    "pendingProps": null,
    "ref": null,
    "return": FiberNode {
      "_debugID": 31,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": FiberNode {
        "_debugID": 31,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": [Circular],
        "child": null,
        "effectTag": 0,
        "expirationTime": 1,
        "firstEffect": null,
        "index": 0,
        "internalContextTag": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <ul
                        class="sidebar"
            >
                        <li>
                                    <a
                                                href="/alerts"
                                    >
                                                Alerts
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/bars"
                                    >
                                                Bars
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/buttons"
                                    >
                                                Buttons
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/cards"
                                    >
                                                Cards
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/list-views"
                                    >
                                                List Views
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/tab-bars"
                                    >
                                                Tab Bars
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/loader"
                                    >
                                                Loader
                                    </a>
                        </li>
                        <li>
                                    <a
                                                href="/demo"
                                    >
                                                Demo
                                    </a>
                        </li>
            </ul>
</div>,
          "context": Object {},
          "current": [Circular],
          "finishedWork": null,
          "hydrate": false,
          "isReadyForCommit": false,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingContext": null,
          "remainingExpirationTime": 0,
        },
        "tag": 3,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "callbackList": null,
          "expirationTime": 1,
          "first": Object {
            "callback": null,
            "expirationTime": 1,
            "isForced": false,
            "isReplace": false,
            "next": null,
            "nextCallback": null,
            "partialState": Object {
              "element": <BrowserRouter>
                <Sidebar
                                links={
                                                Array [
                                                                Object {
                                                                  "route": "/alerts",
                                                                  "text": "Alerts",
                                                                },
                                                                Object {
                                                                  "route": "/bars",
                                                                  "text": "Bars",
                                                                },
                                                                Object {
                                                                  "route": "/buttons",
                                                                  "text": "Buttons",
                                                                },
                                                                Object {
                                                                  "route": "/cards",
                                                                  "text": "Cards",
                                                                },
                                                                Object {
                                                                  "route": "/list-views",
                                                                  "text": "List Views",
                                                                },
                                                                Object {
                                                                  "route": "/tab-bars",
                                                                  "text": "Tab Bars",
                                                                },
                                                                Object {
                                                                  "route": "/loader",
                                                                  "text": "Loader",
                                                                },
                                                                Object {
                                                                  "route": "/demo",
                                                                  "text": "Demo",
                                                                },
                                                              ]
                                }
                />
</BrowserRouter>,
            },
          },
          "hasForceUpdate": false,
          "isInitialized": false,
          "isProcessing": false,
          "last": Object {
            "callback": null,
            "expirationTime": 1,
            "isForced": false,
            "isReplace": false,
            "next": null,
            "nextCallback": null,
            "partialState": Object {
              "element": <BrowserRouter>
                <Sidebar
                                links={
                                                Array [
                                                                Object {
                                                                  "route": "/alerts",
                                                                  "text": "Alerts",
                                                                },
                                                                Object {
                                                                  "route": "/bars",
                                                                  "text": "Bars",
                                                                },
                                                                Object {
                                                                  "route": "/buttons",
                                                                  "text": "Buttons",
                                                                },
                                                                Object {
                                                                  "route": "/cards",
                                                                  "text": "Cards",
                                                                },
                                                                Object {
                                                                  "route": "/list-views",
                                                                  "text": "List Views",
                                                                },
                                                                Object {
                                                                  "route": "/tab-bars",
                                                                  "text": "Tab Bars",
                                                                },
                                                                Object {
                                                                  "route": "/loader",
                                                                  "text": "Loader",
                                                                },
                                                                Object {
                                                                  "route": "/demo",
                                                                  "text": "Demo",
                                                                },
                                                              ]
                                }
                />
</BrowserRouter>,
            },
          },
        },
      },
      "child": [Circular],
      "effectTag": 0,
      "expirationTime": 0,
      "firstEffect": [Circular],
      "index": 0,
      "internalContextTag": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <BrowserRouter>
          <Sidebar
                    links={
                              Array [
                                        Object {
                                          "route": "/alerts",
                                          "text": "Alerts",
                                        },
                                        Object {
                                          "route": "/bars",
                                          "text": "Bars",
                                        },
                                        Object {
                                          "route": "/buttons",
                                          "text": "Buttons",
                                        },
                                        Object {
                                          "route": "/cards",
                                          "text": "Cards",
                                        },
                                        Object {
                                          "route": "/list-views",
                                          "text": "List Views",
                                        },
                                        Object {
                                          "route": "/tab-bars",
                                          "text": "Tab Bars",
                                        },
                                        Object {
                                          "route": "/loader",
                                          "text": "Loader",
                                        },
                                        Object {
                                          "route": "/demo",
                                          "text": "Demo",
                                        },
                                      ]
                    }
          />
</BrowserRouter>,
      },
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": <div>
          <ul
                    class="sidebar"
          >
                    <li>
                              <a
                                        href="/alerts"
                              >
                                        Alerts
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/bars"
                              >
                                        Bars
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/buttons"
                              >
                                        Buttons
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/cards"
                              >
                                        Cards
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/list-views"
                              >
                                        List Views
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/tab-bars"
                              >
                                        Tab Bars
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/loader"
                              >
                                        Loader
                              </a>
                    </li>
                    <li>
                              <a
                                        href="/demo"
                              >
                                        Demo
                              </a>
                    </li>
          </ul>
</div>,
        "context": Object {},
        "current": [Circular],
        "finishedWork": null,
        "hydrate": false,
        "isReadyForCommit": false,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingContext": null,
        "remainingExpirationTime": 0,
      },
      "tag": 3,
      "type": null,
      "updateQueue": null,
    },
    "sibling": null,
    "stateNode": [Circular],
    "tag": 2,
    "type": [Function],
    "updateQueue": null,
  },
  "_reactInternalInstance": Object {},
  "context": Object {},
  "history": Object {
    "action": "POP",
    "block": [Function],
    "createHref": [Function],
    "go": [Function],
    "goBack": [Function],
    "goForward": [Function],
    "length": 1,
    "listen": [Function],
    "location": Object {
      "hash": "",
      "pathname": "/",
      "search": "",
      "state": undefined,
    },
    "push": [Function],
    "replace": [Function],
  },
  "props": Object {
    "children": <Sidebar
      links={
            Array [
                  Object {
                    "route": "/alerts",
                    "text": "Alerts",
                  },
                  Object {
                    "route": "/bars",
                    "text": "Bars",
                  },
                  Object {
                    "route": "/buttons",
                    "text": "Buttons",
                  },
                  Object {
                    "route": "/cards",
                    "text": "Cards",
                  },
                  Object {
                    "route": "/list-views",
                    "text": "List Views",
                  },
                  Object {
                    "route": "/tab-bars",
                    "text": "Tab Bars",
                  },
                  Object {
                    "route": "/loader",
                    "text": "Loader",
                  },
                  Object {
                    "route": "/demo",
                    "text": "Demo",
                  },
                ]
      }
/>,
  },
  "refs": Object {},
  "state": null,
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
