// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match the snapshot 1`] = `
Toggle {
  "_reactInternalFiber": FiberNode {
    "_debugID": 10,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": null,
    "_debugSource": Object {
      "fileName": "<PROJECT_ROOT>/src/Components/Toggle.test.js",
      "lineNumber": 12,
    },
    "alternate": null,
    "child": FiberNode {
      "_debugID": 11,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": Object {
        "fileName": "<PROJECT_ROOT>/src/Components/Toggle.js",
        "lineNumber": 30,
      },
      "alternate": null,
      "child": FiberNode {
        "_debugID": 12,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": Object {
          "fileName": "<PROJECT_ROOT>/src/Components/Toggle.js",
          "lineNumber": 31,
        },
        "alternate": null,
        "child": null,
        "effectTag": 0,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "defaultChecked": undefined,
          "type": "checkbox",
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "defaultChecked": undefined,
          "type": "checkbox",
        },
        "ref": null,
        "return": [Circular],
        "sibling": FiberNode {
          "_debugID": 13,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "<PROJECT_ROOT>/src/Components/Toggle.js",
            "lineNumber": 32,
          },
          "alternate": null,
          "child": null,
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "className": "slider",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "className": "slider",
          },
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": <span
            class="slider"
/>,
          "tag": 5,
          "type": "span",
          "updateQueue": null,
        },
        "stateNode": <input
          type="checkbox"
/>,
        "tag": 5,
        "type": "input",
        "updateQueue": null,
      },
      "effectTag": 0,
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "children": Array [
          <input
            defaultChecked={undefined}
            type="checkbox"
/>,
          <span
            className="slider"
/>,
        ],
        "className": "toggle",
        "onChange": [Function],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": Array [
          <input
            defaultChecked={undefined}
            type="checkbox"
/>,
          <span
            className="slider"
/>,
        ],
        "className": "toggle",
        "onChange": [Function],
      },
      "ref": null,
      "return": [Circular],
      "sibling": null,
      "stateNode": <label
        class="toggle"
>
        <input
                type="checkbox"
        />
        <span
                class="slider"
        />
</label>,
      "tag": 5,
      "type": "label",
      "updateQueue": null,
    },
    "effectTag": 1,
    "expirationTime": 0,
    "firstEffect": null,
    "index": 0,
    "key": null,
    "lastEffect": null,
    "memoizedProps": Object {},
    "memoizedState": Object {
      "checked": undefined,
      "theme": "toggle",
    },
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {},
    "ref": null,
    "return": FiberNode {
      "_debugID": 8,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": FiberNode {
        "_debugID": 8,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": [Circular],
        "child": null,
        "effectTag": 0,
        "expirationTime": 1,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <label
                        class="toggle"
            >
                        <input
                                    type="checkbox"
                        />
                        <span
                                    class="slider"
                        />
            </label>
</div>,
          "context": Object {},
          "current": [Circular],
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "remainingExpirationTime": 0,
        },
        "tag": 3,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "callbackList": null,
          "capturedValues": null,
          "expirationTime": 1,
          "first": Object {
            "callback": null,
            "capturedValue": null,
            "expirationTime": 1,
            "isForced": false,
            "isReplace": false,
            "next": null,
            "partialState": Object {
              "element": <Toggle />,
            },
          },
          "hasForceUpdate": false,
          "isInitialized": false,
          "isProcessing": false,
          "last": Object {
            "callback": null,
            "capturedValue": null,
            "expirationTime": 1,
            "isForced": false,
            "isReplace": false,
            "next": null,
            "partialState": Object {
              "element": <Toggle />,
            },
          },
        },
      },
      "child": [Circular],
      "effectTag": 32,
      "expirationTime": 0,
      "firstEffect": [Circular],
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <Toggle />,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": <div>
          <label
                    class="toggle"
          >
                    <input
                              type="checkbox"
                    />
                    <span
                              class="slider"
                    />
          </label>
</div>,
        "context": Object {},
        "current": [Circular],
        "finishedWork": null,
        "firstBatch": null,
        "hydrate": false,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingCommitExpirationTime": 0,
        "pendingContext": null,
        "remainingExpirationTime": 0,
      },
      "tag": 3,
      "type": null,
      "updateQueue": Object {
        "baseState": Object {
          "element": <Toggle />,
        },
        "callbackList": null,
        "capturedValues": null,
        "expirationTime": 0,
        "first": null,
        "hasForceUpdate": false,
        "isInitialized": true,
        "isProcessing": false,
        "last": null,
      },
    },
    "sibling": null,
    "stateNode": [Circular],
    "tag": 2,
    "type": [Function],
    "updateQueue": null,
  },
  "_reactInternalInstance": Object {},
  "context": Object {},
  "props": Object {},
  "refs": Object {},
  "state": Object {
    "checked": undefined,
    "theme": "toggle",
  },
  "update": [Function],
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
